# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UrlWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from Dialog import Ui_Dialog
from Seconde_window import Ui_SecondWindow
import os
import platform

class Ui_UrlWindow(object):
    def setupUi(self, UrlWindow):
        UrlWindow.setObjectName("UrlWindow")
        UrlWindow.resize(696, 199)
        UrlWindow.setStyleSheet("background-color: rgb(45, 55, 66);")
        self.centralwidget = QtWidgets.QWidget(UrlWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(200, 30, 261, 18))
        self.label.setStyleSheet("margin:auto;\n"
"font: 57 14pt \"Bedstead\";\n"
"color: rgb(230, 220, 190);")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 90, 51, 31))
        self.label_2.setStyleSheet("color: rgb(0, 193, 228);\n"
"font: 57 14pt \"Bedstead\";")
        self.label_2.setObjectName("label_2")
        self.InputUrl = QtWidgets.QLineEdit(self.centralwidget)
        self.InputUrl.setGeometry(QtCore.QRect(100, 90, 431, 32))
        self.InputUrl.setStyleSheet("outline: none;")
        self.InputUrl.setClearButtonEnabled(True)
        self.InputUrl.setObjectName("InputUrl")
        
        # Verificacion presionando enter
        self.InputUrl.returnPressed.connect(self.check_url)
        
        self.ContinueBotton = QtWidgets.QPushButton(self.centralwidget)
        self.ContinueBotton.setGeometry(QtCore.QRect(560, 90, 111, 34))
        self.ContinueBotton.setStyleSheet("color: rgb(230, 220, 190);\n"
"font: 57 10pt \"Bedstead\";")
        self.ContinueBotton.setObjectName("ContinueBotton")
        
        # Verificando presionando el boton
        self.ContinueBotton.clicked.connect(self.check_url)
        UrlWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(UrlWindow)
        QtCore.QMetaObject.connectSlotsByName(UrlWindow)

    def retranslateUi(self, UrlWindow):
        _translate = QtCore.QCoreApplication.translate
        UrlWindow.setWindowTitle(_translate("UrlWindow", "MainWindow"))
        self.label.setText(_translate("UrlWindow", "Youtube Download"))
        self.label_2.setText(_translate("UrlWindow", "Url:"))
        self.InputUrl.setPlaceholderText(_translate("UrlWindow", "Enter url video"))
        self.ContinueBotton.setText(_translate("UrlWindow", "Continue"))

    def dialog(self):
            url = self.InputUrl.text()
            if url[0:23] == "" or url[0:23] != "https//:www.youtube.com":
                self.window = QtWidgets.QMainWindow()
                self.ui = Ui_Dialog()
                self.ui.setupUi(self.window)
                self.window.show()
                    
    def second_window(self):
            self.window = QtWidgets.QMainWindow()
            self.ui = Ui_SecondWindow(self.InputUrl.text())
            self.ui.setupUi(self.window)
            self.window.show()
            UrlWindow.close()


    def check_url(self):
        url = self.InputUrl.text()
        user = os.getlogin()
        system = platform.system()
        
        if url[0:23] != "https://www.youtube.com":
                self.dialog()
        else:
                if system == "Linux" or "Mac":
                        if os.path.exists(f"/home/{user}/Youtube_Download/images"):
                                self.second_window()
                        else:
                                os.mkdir(f"/home/{user}/Youtube_Download")
                                os.mkdir(f"/home/{user}/Youtube_Download/images")
                                os.mkdir(f"/home/{user}/Youtube_Download/High")
                                os.mkdir(f"/home/{user}/Youtube_Download/Low")
                                os.mkdir(f"/home/{user}/Youtube_Download/Audio")
                                self.second_window()
                else:
                        if os.path.exists(f"C:\\Users\\{user}\\Youtube_Download\\images"):
                                self.second_window()
                        else:
                                os.mkdir(f"C:\\Users\\{user}\\Youtube_Download")
                                os.mkdir(f"C:\\Users\\{user}\\Youtube_Download\\images")
                                os.mkdir(f"C:\\Users\\{user}\\Youtube_Download\\High")
                                os.mkdir(f"C:\\Users\\{user}\\Youtube_Download\\Low")
                                os.mkdir(f"C:\\Users\\{user}\\Youtube_Download\\Audio")
                                self.second_window()
                                
                

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    UrlWindow = QtWidgets.QMainWindow()
    ui = Ui_UrlWindow()
    ui.setupUi(UrlWindow)
    UrlWindow.show()
    sys.exit(app.exec_())
